{"version":3,"sources":["Header.js","SwipeButtons.js","firebase.js","TinderCards.js","App.js","reportWebVitals.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","frontSize","fontSize","to","src","alt","SwipeButtons","database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TinderCards","useState","people","setPeople","useEffect","unsubscribe","collection","onSnapshot","snapshot","docs","map","doc","data","person","preventSwipe","style","backgroundImage","url","name","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iXAoCeA,EA5BA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACRC,EAAUC,cAChB,OACI,sBAAKC,UAAU,SAAf,UACKH,EACG,cAACI,EAAA,EAAD,CAAYC,QAAS,kBAAMJ,EAAQK,QAAQN,IAA3C,SACI,cAAC,IAAD,CAAkBO,UAAU,QAAQJ,UAAU,mBAGlD,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYD,UAAU,eAAeK,SAAS,YAGtD,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,qBACIN,UAAU,eACVO,IAAI,wEACJC,IAAI,kBAEZ,cAAC,IAAD,CAAMF,GAAG,SAAT,SACI,cAACL,EAAA,EAAD,UACI,cAAC,IAAD,CAAoBD,UAAU,eAAeK,SAAS,kB,2FCE3DI,MAtBf,WACI,OACI,sBAAKT,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACI,cAAC,IAAD,CAAYK,SAAS,YAEzB,cAACJ,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAWK,SAAS,YAExB,cAACJ,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAcK,SAAS,YAE3B,cAACJ,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAcK,SAAS,YAE3B,cAACJ,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACI,cAAC,IAAD,CAAaK,SAAS,gB,QCVvBK,E,MAHKC,EAASC,cAVN,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIUC,Y,uBC6BdC,MArCf,WACI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,qBAAU,WACN,IAAMC,EAAehB,EACpBiB,WAAW,UACXC,YAAW,SAAAC,GAAQ,OAChBL,EAAUK,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,cAG3C,OAAO,WACHP,OAEL,IAGC,gCACI,8CACA,qBAAK1B,UAAU,8BAAf,SACCuB,EAAOQ,KAAI,SAAAG,GAAM,OACd,cAAC,IAAD,CACIlC,UAAU,QAEVmC,aAAc,CAAC,KAAM,QAHzB,SAKI,qBACAC,MAAO,CAAEC,gBAAgB,OAAD,OAASH,EAAOI,IAAhB,MACxBtC,UAAU,OAFV,SAGI,6BAAKkC,EAAOK,UANXL,EAAOK,eCCjBC,EArBH,WACV,OAEE,aADA,CACA,OAAKxC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOyC,KAAK,SAAZ,UACE,cAAC,EAAD,CAAQ5C,WAAW,MACnB,kDAEF,eAAC,IAAD,CAAO4C,KAAK,IAAZ,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,eCRGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8f478770.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst Header = ( {backButton} ) => {\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"header\">\r\n            {backButton ? (\r\n                <IconButton onClick={() => history.replace(backButton)}>\r\n                    <ArrowBackIosIcon frontSize=\"large\" className=\"header__icon\" />\r\n                </IconButton>\r\n            ) : (\r\n                <IconButton>\r\n                    <PersonIcon className=\"header__icon\" fontSize=\"large\" />\r\n                </IconButton>\r\n            )}\r\n            <Link to=\"/\">\r\n                <img \r\n                    className=\"header__logo\"\r\n                    src=\"https://1000logos.net/wp-content/uploads/2018/07/Tinder_logo_PNG1.png\" \r\n                    alt=\"tinder logo\" />\r\n            </Link>\r\n            <Link to=\"/chats\">\r\n                <IconButton>\r\n                    <QuestionAnswerIcon className=\"header__icon\" fontSize=\"large\"/>\r\n                </IconButton>\r\n            </Link>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport { IconButton } from '@material-ui/core';\r\nimport './SwipeButtons.css';\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton className=\"swipeButtons__repeat\">\r\n                <ReplayIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__left\">\r\n                <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__star\">\r\n                <StarRateIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__right\">\r\n                <FavoriteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"swipeButtons__lightning\">\r\n                <FlashOnIcon fontSize=\"large\" />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBlglJ_KNHWt1yls8FlDs2xtnZ7AFkB1DA\",\r\n    authDomain: \"tinder-clone-2cd4f.firebaseapp.com\",\r\n    projectId: \"tinder-clone-2cd4f\",\r\n    storageBucket: \"tinder-clone-2cd4f.appspot.com\",\r\n    messagingSenderId: \"281635053792\",\r\n    appId: \"1:281635053792:web:49ee7dc793f34eb2c83085\",\r\n    measurementId: \"G-YFXV4VP25J\",\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst database = firebaseApp.firestore();\r\n\r\nexport default database;","import React, { useState, useEffect } from 'react'\r\nimport database from './firebase';\r\nimport TinderCard from 'react-tinder-card'; \r\nimport './TinderCards.css'\r\n\r\nfunction TinderCards() {\r\n    const [people, setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe  = database\r\n        .collection('people')\r\n        .onSnapshot(snapshot => (\r\n            setPeople(snapshot.docs.map(doc => doc.data()))\r\n        ));\r\n        \r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Tinder Cards</h1>\r\n            <div className=\"tinderCards__ cardContainer\">\r\n            {people.map(person => (\r\n                <TinderCard\r\n                    className=\"swipe\"\r\n                    key={person.name}\r\n                    preventSwipe={['up', 'down']}\r\n                    >\r\n                    <div \r\n                    style={{ backgroundImage: `url(${person.url})` }}\r\n                    className=\"card\">\r\n                        <h3>{person.name}</h3>\r\n                    </div>\r\n                </TinderCard>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport Header from \"./Header\";\nimport SwipeButtons from \"./SwipeButtons\";\nimport TinderCards from \"./TinderCards\";\n\nconst App = () => {\n  return (\n    // BEM\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/chats\">\n            <Header backButton=\"/\" />\n            <h1>I am chatpage</h1>\n          </Route>\n          <Route path=\"/\">\n            <Header /> \n            <TinderCards />\n            <SwipeButtons />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}